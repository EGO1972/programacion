
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


void LeeVec(int *v, int n);
void Mostrar(int *v, int n);
void ContarImpares(int *vec, int l, int *contador); 
void CopiarImpares(int *v1, int l, int *v2);

int main(int argc, char **argv)
{
    int n;
    int *v1;
    int *v2;
    int nimpares = 0;
    
    srand((unsigned)time (NULL));
    
    printf("introduce el tamano del vector ");
    scanf("%d", &n);
    
    v1 = (int*) malloc(n* sizeof(int));
    if( v1 == NULL){
        printf("no hay memoria\n");
    }else{
        LeeVec(v1, n);
        ContarImpares(v1, n, &nimpares);
        
        if(nimpares==0){
            printf("no hay numeros impares.\n");
        } else {
            v2= calloc(nimpares, sizeof(int));
        if(v2==NULL){
            printf("no hay memoria");
        }else{
            CopiarImpares(v1, n, v2);
            printf("el vector antes de las modificaciones\n");
            MostrarVector (v1,n);
            printf("\n");
            printf("el vector de impares\n");
            MostrarVector (v2,nimpares);
            free(v2);
        }
        free(v1);
    }
        }
	return 0;
}


void LeeVec(int *v, int n){
    int i;
    for(i = 0 ; i < n ; i++){
        *(v+i) = rand() %1000;
    }
}

void MostrarVector(int *v, int n){
    int i;
    for (i=0; i<n; i++){
        printf(" %d,",*(v+i));
    }
    printf("\n\n");
}

void ContarImpares(int *vec, int n, int *contador){
    
    int i;
    *contador = 0;
    for(i=0; i<n; i++){
        if(vec[i] %2 == 1){
            (*contador) ++;    //muy imprtante los parentesis
        }
    }
}
void CopiarImpares(int *v1, int n, int *v2){
    int i,j;
    j=0;
    
    for(i=0; i<n; i++){
        if(*(v1+i) % 2 ==1){
            v2[j] = v1[i];
            j++;
        }
    }
}

